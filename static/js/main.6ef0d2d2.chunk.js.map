{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","input","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","FilteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAM,SAAAC,GAAK,OACrB,sBAAKC,UAAY,OAAjB,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACrB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCDbC,EAAW,SAAAR,GAAK,OAEzB,qBAAKC,UAAY,YAAjB,SAA8BD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAExD,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCPXM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,aAAhB,OAEtB,uBACIZ,UAAY,SACZa,OAAK,EAACC,KAAO,SACbH,YAAaA,EACbI,SAAUH,MCqCHI,E,kDAtCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXT,SAAS,GACTU,YAAY,IALH,E,qDAUf,WAAoB,IAAD,OACjBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAASe,S,oBAG9H,WAAS,IAAD,OACF,EAA+BE,KAAKR,MAA7BT,EAAP,EAAOA,SAASU,EAAhB,EAAgBA,YACVQ,EAAmBlB,EAASmB,QAAO,SAAAxB,GAAO,OAC7CA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBACnD,OACG,sBAAK5B,UAAU,MAAf,UAEE,cAAC,EAAD,CACEW,YAAc,kBACdC,aAAgB,SAAAkB,GAAC,OAAG,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAG1D,cAAC,EAAD,CAAUxB,SAAYkB,W,GA3BfO,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6ef0d2d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card =props =>(\r\n   <div className = 'card'>\r\n       <img alt='monster' src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h3>{props.monster.name}</h3>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\n\r\n\r\nexport const CardList = props => (\r\n    \r\n    <div className = 'card-List'>{props.monsters.map(monster => \r\n    (\r\n    <Card key = {monster.id} monster = {monster}/>)\r\n    )\r\n    }\r\n    </div>); ","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n export const SearchBox = ({placeholder , handleChange}) =>(\r\n \r\n    <input\r\n        className = 'search'\r\n        input type = 'search'\r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n      />\r\n );","//import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters:[],\n      searchField:''\n    };\n\n  }\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({monsters:users}));\n}\n\nrender(){\n      const {monsters,searchField} = this.state;\n      const FilteredMonsters = monsters.filter(monster =>\n         monster.name.toLowerCase().includes(searchField.toLowerCase()));\n      return (\n         <div className='App'>\n\n           <SearchBox\n             placeholder = \"Search Monsters\" \n             handleChange = {e =>this.setState({searchField:e.target.value})} \n           />\n\n           <CardList monsters = {FilteredMonsters}/>\n            \n         </div>\n       );\n      \n\n\n\n\n\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}